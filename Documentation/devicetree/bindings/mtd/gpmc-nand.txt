Device tree bindings for GPMC connected NANDs

GPMC connected NAND (found on OMAP boards) are represented as child nodes of
the GPMC controller with a name of "nand".

All timing relevant properties as well as generic gpmc child properties are
explained in a separate documents - please refer to
Documentation/devicetree/bindings/bus/ti-gpmc.txt

For NAND specific properties such as ECC modes or bus width, please refer to
Documentation/devicetree/bindings/mtd/nand.txt


Required properties:

 - reg:		The CS line the peripheral is connected to

Optional properties:

 - nand-bus-width: 		Determines data-width of the connected device
				x16 = "16"
				x8  = "8" (default)


 - ti,nand-ecc-opt:		Determines the ECC scheme used by driver.
				It can be any of the following strings:

	"hamming_code_sw"		1-bit Hamming ECC
					- ECC calculation in software
					- Error detection in software
					- ECC layout compatible with S/W scheme

	"hamming_code_hw"		1-bit Hamming ECC
					- ECC calculation in hardware
					- Error detection in software
					- ECC layout compatible with S/W scheme

	"hamming_code_hw_romcode"	1-bit Hamming ECC
					- ECC calculation in hardware
					- Error detection in software
					- ECC layout compatible with ROM code

	"bch4_code_hw_detection_sw"	4-bit BCH ECC
					- ECC calculation in hardware
					- Error detection in software
					- ECC layout compatible with S/W scheme
					* depends on CONFIG_MTD_NAND_ECC_BCH

	"bch4_code_hw"             	4-bit BCH ECC
					- ECC calculation in hardware
					- Error detection in hardware
					- ECC layout compatible with ROM code
					* depends on CONFIG_MTD_NAND_OMAP_BCH
					* requires <elm_id> to be specified

	"bch8_code_hw_detection_sw"	8-bit BCH ECC
					- ECC calculation in hardware
					- Error detection in software
					- ECC layout compatible with S/W scheme
					* depends on CONFIG_MTD_NAND_ECC_BCH

	"bch8_code_hw"             	8-bit BCH ECC
					- ECC calculation in hardware
					- Error detection in hardware
					- ECC layout compatible with ROM code
					* depends on CONFIG_MTD_NAND_OMAP_BCH
					* requires <elm_id> to be specified


 - elm_id:			Specifies elm device node. This is required to
				support some BCH ECC schemes mentioned above.


For inline partiton table parsing (optional):

 - #address-cells: should be set to 1
 - #size-cells: should be set to 1

Example for an AM33xx board:

	gpmc: gpmc@50000000 {
		compatible = "ti,am3352-gpmc";
		ti,hwmods = "gpmc";
		reg = <0x50000000 0x1000000>;
		interrupts = <100>;
		gpmc,num-cs = <8>;
		gpmc,num-waitpins = <2>;
		#address-cells = <2>;
		#size-cells = <1>;
		ranges = <0 0 0x08000000 0x2000>;	/* CS0: NAND */
		elm_id = <&elm>;

		nand@0,0 {
			reg = <0 0 0>; /* CS0, offset 0 */
			nand-bus-width = <16>;
			ti,nand-ecc-opt = "bch8";

			gpmc,sync-clk-ps = <0>;
			gpmc,cs-on-ns = <0>;
			gpmc,cs-rd-off-ns = <44>;
			gpmc,cs-wr-off-ns = <44>;
			gpmc,adv-on-ns = <6>;
			gpmc,adv-rd-off-ns = <34>;
			gpmc,adv-wr-off-ns = <44>;
			gpmc,we-off-ns = <40>;
			gpmc,oe-off-ns = <54>;
			gpmc,access-ns = <64>;
			gpmc,rd-cycle-ns = <82>;
			gpmc,wr-cycle-ns = <82>;
			gpmc,wr-access-ns = <40>;
			gpmc,wr-data-mux-bus-ns = <0>;

			#address-cells = <1>;
			#size-cells = <1>;

			/* partitions go here */
		};
	};

